version: '3.4'
services:
  fluent:
    image: fluent/fluent-bit
    ports:
      - 24224:24224
    configs:
      - source: fluent_config
        target: /fluent-bit/etc/fluent-bit.conf
      - source: parsers_conf
        target: /fluent-bit/etc/parsers.conf
    deploy:
      mode: global
      resources:
        limits:
          memory: 64M

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.2
    ports:
      - 9200:9200
    environment:
      - ES_JAVA_OPTS=-Xmx412m -Xms256m
      - network.host=0.0.0.0
      - transport.host=0.0.0.0
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      replicas: 1

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.7.2
    ports:
      - 5601:5601
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      replicas: 1

  sample-application:
    image: sample-application:latest
    environment:
      - SERVICE_ID={{.Task.Slot}}
      - TZ=$TIMEZONE
    ports:
      - 8883:8883
    healthcheck:
      start_period: 14m
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 256M
      replicas: 1

  second-sample-application:
    image: second-sample-application:latest
    environment:
      - TZ=$TIMEZONE
    ports:
      - 8884:8884
    healthcheck:
      start_period: 14m
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      replicas: 1

  eureka-server:
    image: eureka-server:latest
    environment:
      - TZ=$TIMEZONE
    ports:
      - 8882:8882
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
      replicas: 1

  portainer:
    image: portainer/portainer
    command: -H tcp://tasks.agent:9001 --tlsskipverify --no-analytics --admin-password "$$2y$$05$$MjEcJLITbMMjDk6ZSNIV3O0MVyrVyPRqACGPlxD7p83k5TY5OFON6"
    ports:
      - "9000:9000"
    volumes:
      - portainer:/data
    deploy:
      mode: replicated
      resources:
        limits:
          memory: 256M
      replicas: 1

  agent:
    image: portainer/agent
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - agent:/var/lib/docker/volumes
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M

configs:
  fluent_config:
    file: fluent.conf
  parsers_conf:
    file: parsers.conf

volumes:
  portainer:
  agent:
