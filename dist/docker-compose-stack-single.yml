version: '3.4'
services:
#  rabbit:
#    image: rabbitmq:3-management
#    hostname: rabbit
#    environment:
#      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
#      RABBITMQ_DEFAULT_USER: "rabbitmq"
#      RABBITMQ_DEFAULT_PASS: "rabbitmq"
#      RABBITMQ_DEFAULT_VHOST: "/"
#      TZ: "$TIMEZONE"
#      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit log_levels [{connection,error}]"
#    ports:
#      - 15672:15672
#      - 5672:5672
#    healthcheck:
#      test: bash -c "</dev/tcp/127.0.0.1/5672"
#      interval: 15s
#      timeout: 1s
#      retries: 10
#    deploy:
#     update_config:
#        parallelism: 1
#        delay: 10s
#     resources:
#        limits:
#          memory: 512M
#        reservations:
#          memory: 256M
#     replicas: 1

  admin:
    image: admin:latest
    environment:
      - TZ=$TIMEZONE
    ports:
      - 8880:8880
    depends_on:
      - eureka-server
      - config-server
      - logstash
    deploy:
     update_config:
        parallelism: 1
        delay: 10s
     resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
     replicas: 1

  sample-application:
    image: sample-application:latest
    environment:
      - LOGSTASH_HOST=$LOGSTASHHOST
      - TZ=$TIMEZONE
    ports:
      - 8883:8883
    depends_on:
      - eureka-server
      - config-server
      - logstash
    healthcheck:
      start_period: 14m
    deploy:
     update_config:
        parallelism: 1
        delay: 10s
     resources:
        limits:
          memory: 256M
     replicas: 1

  second-sample-application:
    image: second-sample-application:latest
    environment:
      - TZ=$TIMEZONE
    ports:
      - 8884:8884
    depends_on:
      - eureka-server
      - config-server
      - logstash
    healthcheck:
      start_period: 14m
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 256M
      replicas: 1

  eureka-server:
    image: eureka-server:latest
    environment:
      - TZ=$TIMEZONE
    ports:
      - 8882:8882
    depends_on:
      - logstash
    deploy:
     update_config:
        parallelism: 1
        delay: 10s
     resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
     replicas: 1

  config-server:
    image: config-server:latest
    environment:
      - LOGSTASH_HOST=$LOGSTASHHOST
      - TZ=$TIMEZONE
    ports:
      - 8080:8080
    depends_on:
      - eureka-server
      - logstash
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
      replicas: 1

  gateway-server:
    image: gateway-server:latest
    environment:
      - LOGSTASH_HOST=$LOGSTASHHOST
      - TZ=$TIMEZONE
    depends_on:
      - eureka-server
      - config-server
      - logstash
    ports:
      - 80:8881
    deploy:
     update_config:
        parallelism: 1
        delay: 10s
     resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
     replicas: 1

  portainer:
    image: portainer/portainer:latest
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
     update_config:
        parallelism: 1
        delay: 10s
     resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
     replicas: 1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.4.2
    ports:
      - 9200:9200
    environment:
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
      - network.host=0.0.0.0
      - transport.host=0.0.0.0
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      replicas: 1

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.4.2
    environment:
      - TZ=$TIMEZONE
      - ES_HOST=$ELASTICSEARCH_HOST
      - http.host=0.0.0.0
    ports:
      - 6661:6661/udp
      - 514:1514/udp
      - 515:1515/udp
    depends_on:
      - elasticsearch
    healthcheck:
      test: curl localhost:9600 -f -s || exit 1
      interval: 10s
      timeout: 1s
      retries: 10
      start_period: 2m
    secrets:
      - source: logstash_config
        target: /usr/share/logstash/pipeline/logstash.conf
    logging:
      driver: "json-file"
      options:
        max-size: "1M"
        max-file: "2"
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
      replicas: 1

  kibana:
      image: docker.elastic.co/kibana/kibana-oss:6.4.2
      ports:
        - 5601:5601
      deploy:
        update_config:
          parallelism: 1
          delay: 10s
        resources:
          limits:
            memory: 512M
          reservations:
            memory: 128M
        replicas: 1

secrets:
  logstash_config:
    file: ./logstash.conf